name: Firmware CI

on: [push,pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
  
    # Build machines don't have arm-none-eabi gcc, so let's download it and put it on the path
    - name: Download & Install GCC
      run: | # Compiler hosted on our other git repo - avoids having to download from the nice folks at ARM every time
        wget 'https://github.com/rusefi/build_support/raw/master/gcc-arm-none-eabi-9-2019-q4-major-x86_64-linux.tar.xz' -O compiler.tar.xz
        tar -xvf compiler.tar.xz
        echo "::add-path::`pwd`/gcc-arm-none-eabi-9-2019-q4-major/bin"
  
    # Make sure the compiler we just downloaded works - just print out the version
    - name: Test Compiler
      run: arm-none-eabi-gcc -v
  
    # Build the firmware!
    - name: Build Firmware
      working-directory: ./firmware/
      run: make -j4

    # The next two steps upload the bin and elf as build artifacts
    - name: Upload elf
      uses: actions/upload-artifact@v1
      with:
        name: knocksense-elf
        path: ./firmware/build/knocksense.elf
        
    - name: Upload bin
      uses: actions/upload-artifact@v1
      with:
        name: knocksense-bin
        path: ./firmware/build/knocksense.bin
